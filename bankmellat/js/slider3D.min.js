(function (e) {
    if (typeof define === "function" && define.amd && define.amd.jQuery) {
        define(["jquery"], e)
    } else {
        e(jQuery)
    }
})(function (e) {
    function N(t) {
        if (t && t.allowPageScroll === undefined && (t.swipe !== undefined || t.swipeStatus !== undefined)) {
            t.allowPageScroll = u
        }
        if (t.click !== undefined && t.tap === undefined) {
            t.tap = t.click
        }
        if (!t) {
            t = {}
        }
        t = e.extend({}, e.fn.swipe.defaults, t);
        return this.each(function () {
            var n = e(this);
            var r = n.data(x);
            if (!r) {
                r = new C(this, t);
                n.data(x, r)
            }
        })
    }

    function C(T, N) {
        function nt(t) {
            if (jt()) {
                return
            }
            if (e(t.target).closest(N.excludedElements, X).length > 0) {
                return
            }
            var n = t.originalEvent ? t.originalEvent : t;
            var r, i = S ? n.touches[0] : n;
            V = y;
            if (S) {
                $ = n.touches.length
            } else {
                t.preventDefault()
            }
            P = 0;
            H = null;
            z = null;
            B = 0;
            F = 0;
            I = 0;
            R = 1;
            U = 0;
            J = Ut();
            W = Xt();
            Ht();
            if (!S || $ === N.fingers || N.fingers === m || gt()) {
                It(0, i);
                K = en();
                if ($ == 2) {
                    It(1, n.touches[1]);
                    F = I = Jt(J[0].start, J[1].start)
                }
                if (N.swipeStatus || N.pinchStatus) {
                    r = ft(n, V)
                }
            } else {
                r = false
            }
            if (r === false) {
                V = E;
                ft(n, V);
                return r
            } else {
                Ft(true)
            }
            return null
        }

        function rt(e) {
            var t = e.originalEvent ? e.originalEvent : e;
            if (V === w || V === E || Bt()) {
                return
            }
            var n, r = S ? t.touches[0] : t;
            var i = qt(r);
            Q = en();
            if (S) {
                $ = t.touches.length
            }
            V = b;
            if ($ == 2) {
                if (F == 0) {
                    It(1, t.touches[1]);
                    F = I = Jt(J[0].start, J[1].start)
                } else {
                    qt(t.touches[1]);
                    I = Jt(J[0].end, J[1].end);
                    z = Qt(J[0].end, J[1].end)
                }
                R = Kt(F, I);
                U = Math.abs(F - I)
            }
            if ($ === N.fingers || N.fingers === m || !S || gt()) {
                H = Zt(i.start, i.end);
                vt(e, H);
                P = Gt(i.start, i.end);
                B = $t();
                zt(H, P);
                if (N.swipeStatus || N.pinchStatus) {
                    n = ft(t, V)
                }
                if (!N.triggerOnTouchEnd || N.triggerOnTouchLeave) {
                    var s = true;
                    if (N.triggerOnTouchLeave) {
                        var o = tn(this);
                        s = nn(i.end, o)
                    }
                    if (!N.triggerOnTouchEnd && s) {
                        V = at(b)
                    } else {
                        if (N.triggerOnTouchLeave && !s) {
                            V = at(w)
                        }
                    }
                    if (V == E || V == w) {
                        ft(t, V)
                    }
                }
            } else {
                V = E;
                ft(t, V)
            }
            if (n === false) {
                V = E;
                ft(t, V)
            }
        }

        function it(e) {
            var t = e.originalEvent;
            if (S) {
                if (t.touches.length > 0) {
                    Pt();
                    return true
                }
            }
            if (Bt()) {
                $ = Y
            }
            e.preventDefault();
            Q = en();
            B = $t();
            if (ht()) {
                V = E;
                ft(t, V)
            } else {
                if (N.triggerOnTouchEnd || N.triggerOnTouchEnd == false && V === b) {
                    V = w;
                    ft(t, V)
                } else {
                    if (!N.triggerOnTouchEnd && Tt()) {
                        V = w;
                        lt(t, V, c)
                    } else {
                        if (V === b) {
                            V = E;
                            ft(t, V)
                        }
                    }
                }
            }
            Ft(false);
            return null
        }

        function st() {
            $ = 0;
            Q = 0;
            K = 0;
            F = 0;
            I = 0;
            R = 1;
            Ht();
            Ft(false)
        }

        function ot(e) {
            var t = e.originalEvent;
            if (N.triggerOnTouchLeave) {
                V = at(w);
                ft(t, V)
            }
        }

        function ut() {
            X.unbind(L, nt);
            X.unbind(D, st);
            X.unbind(O, rt);
            X.unbind(M, it);
            if (_) {
                X.unbind(_, ot)
            }
            Ft(false)
        }

        function at(e) {
            var t = e;
            var n = dt();
            var r = ct();
            var i = ht();
            if (!n || i) {
                t = E
            } else {
                if (r && e == b && (!N.triggerOnTouchEnd || N.triggerOnTouchLeave)) {
                    t = w
                } else {
                    if (!r && e == w && N.triggerOnTouchLeave) {
                        t = E
                    }
                }
            }
            return t
        }

        function ft(e, t) {
            var n = undefined;
            if (Et() || wt()) {
                n = lt(e, t, f)
            } else {
                if ((yt() || gt()) && n !== false) {
                    n = lt(e, t, l)
                }
            }
            if (_t() && n !== false) {
                n = lt(e, t, h)
            } else {
                if (Dt() && n !== false) {
                    n = lt(e, t, p)
                } else {
                    if (Mt() && n !== false) {
                        n = lt(e, t, c)
                    }
                }
            }
            if (t === E) {
                st(e)
            }
            if (t === w) {
                if (S) {
                    if (e.touches.length == 0) {
                        st(e)
                    }
                } else {
                    st(e)
                }
            }
            return n
        }

        function lt(u, a, d) {
            var v = undefined;
            if (d == f) {
                X.trigger("swipeStatus", [a, H || null, P || 0, B || 0, $]);
                if (N.swipeStatus) {
                    v = N.swipeStatus.call(X, u, a, H || null, P || 0, B || 0, $);
                    if (v === false) {
                        return false
                    }
                }
                if (a == w && bt()) {
                    X.trigger("swipe", [H, P, B, $]);
                    if (N.swipe) {
                        v = N.swipe.call(X, u, H, P, B, $);
                        if (v === false) {
                            return false
                        }
                    }
                    switch (H) {
                        case t:
                            X.trigger("swipeLeft", [H, P, B, $]);
                            if (N.swipeLeft) {
                                v = N.swipeLeft.call(X, u, H, P, B, $)
                            }
                            break;
                        case n:
                            X.trigger("swipeRight", [H, P, B, $]);
                            if (N.swipeRight) {
                                v = N.swipeRight.call(X, u, H, P, B, $)
                            }
                            break;
                        case r:
                            X.trigger("swipeUp", [H, P, B, $]);
                            if (N.swipeUp) {
                                v = N.swipeUp.call(X, u, H, P, B, $)
                            }
                            break;
                        case i:
                            X.trigger("swipeDown", [H, P, B, $]);
                            if (N.swipeDown) {
                                v = N.swipeDown.call(X, u, H, P, B, $)
                            }
                            break
                    }
                }
            }
            if (d == l) {
                X.trigger("pinchStatus", [a, z || null, U || 0, B || 0, $, R]);
                if (N.pinchStatus) {
                    v = N.pinchStatus.call(X, u, a, z || null, U || 0, B || 0, $, R);
                    if (v === false) {
                        return false
                    }
                }
                if (a == w && mt()) {
                    switch (z) {
                        case s:
                            X.trigger("pinchIn", [z || null, U || 0, B || 0, $, R]);
                            if (N.pinchIn) {
                                v = N.pinchIn.call(X, u, z || null, U || 0, B || 0, $, R)
                            }
                            break;
                        case o:
                            X.trigger("pinchOut", [z || null, U || 0, B || 0, $, R]);
                            if (N.pinchOut) {
                                v = N.pinchOut.call(X, u, z || null, U || 0, B || 0, $, R)
                            }
                            break
                    }
                }
            }
            if (d == c) {
                if (a === E || a === w) {
                    clearTimeout(et);
                    if (Nt() && !Lt()) {
                        Z = en();
                        et = setTimeout(e.proxy(function () {
                            Z = null;
                            X.trigger("tap", [u.target]);
                            if (N.tap) {
                                v = N.tap.call(X, u, u.target)
                            }
                        }, this), N.doubleTapThreshold)
                    } else {
                        Z = null;
                        X.trigger("tap", [u.target]);
                        if (N.tap) {
                            v = N.tap.call(X, u, u.target)
                        }
                    }
                }
            } else {
                if (d == h) {
                    if (a === E || a === w) {
                        clearTimeout(et);
                        Z = null;
                        X.trigger("doubletap", [u.target]);
                        if (N.doubleTap) {
                            v = N.doubleTap.call(X, u, u.target)
                        }
                    }
                } else {
                    if (d == p) {
                        if (a === E || a === w) {
                            clearTimeout(et);
                            Z = null;
                            X.trigger("longtap", [u.target]);
                            if (N.longTap) {
                                v = N.longTap.call(X, u, u.target)
                            }
                        }
                    }
                }
            }
            return v
        }

        function ct() {
            var e = true;
            if (N.threshold !== null) {
                e = P >= N.threshold
            }
            return e
        }

        function ht() {
            var e = false;
            if (N.cancelThreshold !== null && H !== null) {
                e = Wt(H) - P >= N.cancelThreshold
            }
            return e
        }

        function pt() {
            if (N.pinchThreshold !== null) {
                return U >= N.pinchThreshold
            }
            return true
        }

        function dt() {
            var e;
            if (N.maxTimeThreshold) {
                if (B >= N.maxTimeThreshold) {
                    e = false
                } else {
                    e = true
                }
            } else {
                e = true
            }
            return e
        }

        function vt(e, s) {
            if (N.allowPageScroll === u || gt()) {
                e.preventDefault()
            } else {
                var o = N.allowPageScroll === a;
                switch (s) {
                    case t:
                        if (N.swipeLeft && o || !o && N.allowPageScroll != d) {
                            e.preventDefault()
                        }
                        break;
                    case n:
                        if (N.swipeRight && o || !o && N.allowPageScroll != d) {
                            e.preventDefault()
                        }
                        break;
                    case r:
                        if (N.swipeUp && o || !o && N.allowPageScroll != v) {
                            e.preventDefault()
                        }
                        break;
                    case i:
                        if (N.swipeDown && o || !o && N.allowPageScroll != v) {
                            e.preventDefault()
                        }
                        break
                }
            }
        }

        function mt() {
            var e = St();
            var t = xt();
            var n = pt();
            return e && t && n
        }

        function gt() {
            return !!(N.pinchStatus || N.pinchIn || N.pinchOut)
        }

        function yt() {
            return !!(mt() && gt())
        }

        function bt() {
            var e = dt();
            var t = ct();
            var n = St();
            var r = xt();
            var i = ht();
            var s = !i && r && n && t && e;
            return s
        }

        function wt() {
            return !!(N.swipe || N.swipeStatus || N.swipeLeft || N.swipeRight || N.swipeUp || N.swipeDown)
        }

        function Et() {
            return !!(bt() && wt())
        }

        function St() {
            return $ === N.fingers || N.fingers === m || !S
        }

        function xt() {
            return J[0].end.x !== 0
        }

        function Tt() {
            return !!N.tap
        }

        function Nt() {
            return !!N.doubleTap
        }

        function Ct() {
            return !!N.longTap
        }

        function kt() {
            if (Z == null) {
                return false
            }
            var e = en();
            return Nt() && e - Z <= N.doubleTapThreshold
        }

        function Lt() {
            return kt()
        }

        function At() {
            return ($ === 1 || !S) && (isNaN(P) || P === 0)
        }

        function Ot() {
            return B > N.longTapThreshold && P < g
        }

        function Mt() {
            return !!(At() && Tt())
        }

        function _t() {
            return !!(kt() && Nt())
        }

        function Dt() {
            return !!(Ot() && Ct())
        }

        function Pt() {
            G = en();
            Y = event.touches.length + 1
        }

        function Ht() {
            G = 0;
            Y = 0
        }

        function Bt() {
            var e = false;
            if (G) {
                var t = en() - G;
                if (t <= N.fingerReleaseThreshold) {
                    e = true
                }
            }
            return e
        }

        function jt() {
            return !!(X.data(x + "_intouch") === true)
        }

        function Ft(e) {
            if (e === true) {
                X.bind(O, rt);
                X.bind(M, it);
                if (_) {
                    X.bind(_, ot)
                }
            } else {
                X.unbind(O, rt, false);
                X.unbind(M, it, false);
                if (_) {
                    X.unbind(_, ot, false)
                }
            }
            X.data(x + "_intouch", e === true)
        }

        function It(e, t) {
            var n = t.identifier !== undefined ? t.identifier : 0;
            J[e].identifier = n;
            J[e].start.x = J[e].end.x = t.pageX || t.clientX;
            J[e].start.y = J[e].end.y = t.pageY || t.clientY;
            return J[e]
        }

        function qt(e) {
            var t = e.identifier !== undefined ? e.identifier : 0;
            var n = Rt(t);
            n.end.x = e.pageX || e.clientX;
            n.end.y = e.pageY || e.clientY;
            return n
        }

        function Rt(e) {
            for (var t = 0; t < J.length; t++) {
                if (J[t].identifier == e) {
                    return J[t]
                }
            }
        }

        function Ut() {
            var e = [];
            for (var t = 0; t <= 5; t++) {
                e.push({
                    start: {
                        x: 0,
                        y: 0
                    },
                    end: {
                        x: 0,
                        y: 0
                    },
                    identifier: 0
                })
            }
            return e
        }

        function zt(e, t) {
            t = Math.max(t, Wt(e));
            W[e].distance = t
        }

        function Wt(e) {
            if (W[e]) {
                return W[e].distance
            }
            return undefined
        }

        function Xt() {
            var e = {};
            e[t] = Vt(t);
            e[n] = Vt(n);
            e[r] = Vt(r);
            e[i] = Vt(i);
            return e
        }

        function Vt(e) {
            return {
                direction: e,
                distance: 0
            }
        }

        function $t() {
            return Q - K
        }

        function Jt(e, t) {
            var n = Math.abs(e.x - t.x);
            var r = Math.abs(e.y - t.y);
            return Math.round(Math.sqrt(n * n + r * r))
        }

        function Kt(e, t) {
            var n = t / e * 1;
            return n.toFixed(2)
        }

        function Qt() {
            if (R < 1) {
                return o
            } else {
                return s
            }
        }

        function Gt(e, t) {
            return Math.round(Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2)))
        }

        function Yt(e, t) {
            var n = e.x - t.x;
            var r = t.y - e.y;
            var i = Math.atan2(r, n);
            var s = Math.round(i * 180 / Math.PI);
            if (s < 0) {
                s = 360 - Math.abs(s)
            }
            return s
        }

        function Zt(e, s) {
            var o = Yt(e, s);
            if (o <= 45 && o >= 0) {
                return t
            } else {
                if (o <= 360 && o >= 315) {
                    return t
                } else {
                    if (o >= 135 && o <= 225) {
                        return n
                    } else {
                        if (o > 45 && o < 135) {
                            return i
                        } else {
                            return r
                        }
                    }
                }
            }
        }

        function en() {
            var e = new Date;
            return e.getTime()
        }

        function tn(t) {
            t = e(t);
            var n = t.offset();
            var r = {
                left: n.left,
                right: n.left + t.outerWidth(),
                top: n.top,
                bottom: n.top + t.outerHeight()
            };
            return r
        }

        function nn(e, t) {
            return e.x > t.left && e.x < t.right && e.y > t.top && e.y < t.bottom
        }
        var C = S || !N.fallbackToMouseEvents,
            L = C ? "touchstart" : "mousedown",
            O = C ? "touchmove" : "mousemove",
            M = C ? "touchend" : "mouseup",
            _ = C ? null : "mouseleave",
            D = "touchcancel";
        var P = 0,
            H = null,
            B = 0,
            F = 0,
            I = 0,
            R = 1,
            U = 0,
            z = 0,
            W = null;
        var X = e(T);
        var V = "start";
        var $ = 0;
        var J = null;
        var K = 0,
            Q = 0,
            G = 0,
            Y = 0,
            Z = 0;
        var et = null;
        try {
            X.bind(L, nt);
            X.bind(D, st)
        } catch (tt) {
            e.error("events not supported " + L + "," + D + " on jQuery.swipe")
        }
        this.enable = function () {
            X.bind(L, nt);
            X.bind(D, st);
            return X
        };
        this.disable = function () {
            ut();
            return X
        };
        this.destroy = function () {
            ut();
            X.data(x, null);
            return X
        };
        this.option = function (t, n) {
            if (N[t] !== undefined) {
                if (n === undefined) {
                    return N[t]
                } else {
                    N[t] = n
                }
            } else {
                e.error("Option " + t + " does not exist on jQuery.swipe.options")
            }
            return null
        }
    }
    var t = "left",
        n = "right",
        r = "up",
        i = "down",
        s = "in",
        o = "out",
        u = "none",
        a = "auto",
        f = "swipe",
        l = "pinch",
        c = "tap",
        h = "doubletap",
        p = "longtap",
        d = "horizontal",
        v = "vertical",
        m = "all",
        g = 10,
        y = "start",
        b = "move",
        w = "end",
        E = "cancel",
        S = "ontouchstart" in window,
        x = "TouchSwipe";
    var T = {
        fingers: 1,
        threshold: 75,
        cancelThreshold: null,
        pinchThreshold: 20,
        maxTimeThreshold: null,
        fingerReleaseThreshold: 250,
        longTapThreshold: 500,
        doubleTapThreshold: 200,
        swipe: null,
        swipeLeft: null,
        swipeRight: null,
        swipeUp: null,
        swipeDown: null,
        swipeStatus: null,
        pinchIn: null,
        pinchOut: null,
        pinchStatus: null,
        click: null,
        tap: null,
        doubleTap: null,
        longTap: null,
        triggerOnTouchEnd: true,
        triggerOnTouchLeave: false,
        allowPageScroll: "auto",
        fallbackToMouseEvents: true,
        excludedElements: "label, button, input, select, textarea, a, .noSwipe"
    };
    e.fn.swipe = function (t) {
        var n = e(this),
            r = n.data(x);
        if (r && typeof t === "string") {
            if (r[t]) {
                return r[t].apply(this, Array.prototype.slice.call(arguments, 1))
            } else {
                e.error("Method " + t + " does not exist on jQuery.swipe")
            }
        } else {
            if (!r && (typeof t === "object" || !t)) {
                return N.apply(this, arguments)
            }
        }
        return n
    };
    e.fn.swipe.defaults = T;
    e.fn.swipe.phases = {
        PHASE_START: y,
        PHASE_MOVE: b,
        PHASE_END: w,
        PHASE_CANCEL: E
    };
    e.fn.swipe.directions = {
        LEFT: t,
        RIGHT: n,
        UP: r,
        DOWN: i,
        IN: s,
        OUT: o
    };
    e.fn.swipe.pageScroll = {
        NONE: u,
        HORIZONTAL: d,
        VERTICAL: v,
        AUTO: a
    };
    e.fn.swipe.fingers = {
        ONE: 1,
        TWO: 2,
        THREE: 3,
        ALL: m
    }
});
(function (e) {
    e.fn.slide3D = function (t) {
        var n = {
            sliderWidth: 0,
            sliderHeight: 0,
            imgWidth: 0,
            position: "bottom",
            bullets: true,
            auto: true,
            autoSpeed: 2e3,
            fadeSpeed: 500,
            shadow: true,
            highlight: true,
            autoDelay: 1e4
        };
        window.mobilecheck = function () {
            var e = false;
            (function (t) {
                if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))) e = true
            })(navigator.userAgent || navigator.vendor || window.opera);
            return e
        };
        n.mobile = window.mobilecheck();
        n.totalWidth = n.sliderWidth * 7;
        return this.each(function () {
            if (t) {
                e.extend(n, t)
            }
            var r = e(this);
            e(this).children().wrapAll('<div class="slide3D_imageHolder" />');
            var i = e(".slide3D_imageHolder");
            i.wrapAll('<div class="slide3D_slider" />');
            var s = e(".slide3D_slider");
            s.wrapAll('<div class="slide3D_slider_wrapper" />');
            slideWrapper = r.find(".slide3D_slider_wrapper");
            if (n.mobile) {
                e('<div class="slide3D_swiping_div"/>').insertBefore(s);
                var o = r.find(".slide3D_swiping_div");
                o.css({
                    width: "100%",
                    height: "85%",
                    position: "absolute",
                    "z-index": "9999"
                });
                var u = '<div class="slide3D_SVG"><svg version="1.1" id="slide3D_SVG" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="64px" height="64px" viewBox="0 0 64 64" enable-background="new 0 0 64 64" xml:space="preserve"><path class="slide3D_mobile_guide" fill="#231F20" d="M49.724,37.499c0.169-1.941-0.296-3.584-1.382-4.888c-1.603-1.913-4.062-2.51-5.112-2.684c-0.668-1.676-1.688-2.78-3.034-3.284c-0.528-0.197-1.102-0.298-1.704-0.298c-1.012,0-1.923,0.278-2.536,0.525c-0.809-1.468-1.889-2.379-3.212-2.712c-0.364-0.092-0.749-0.139-1.143-0.139c-1.26,0-2.414,0.475-3.198,0.901c-0.272-1.816-0.629-6.133-0.893-9.308l-0.002-0.036c-0.585-7.108-0.771-9.01-1.086-9.563c-0.401-1.378-2.122-3.397-3.838-3.275c-1.134,0.069-2.563,1.001-2.927,5.054c0,14.27-0.401,24.82-0.489,26.966c-1.267,0.576-2.423,1.883-2.551,2.03c-4.075,4.502-2.144,7.81-2.06,7.944c3.115,5.454,9.55,16.19,9.609,16.289l0.126,0.208l21.402,0.038l1.063-3.391C51.027,49.716,49.87,38.705,49.724,37.499z"/></svg></div>';
                o.append(u);
                var a = o.find("#slide3D_SVG");
                a.css({
                    width: r.width() / 3 + "px",
                    top: r.width() * 1.5 / 2 + "px"
                })
            }
            if (n.bullets) {
                var f = e('<ul class="slide3D_pagination" />');
                i.children().each(function (e) {
                    f.append('<li class="slide3D_bullets"></li>')
                });
                var l = f.find(".slide3D_bullets");
                if (n.position == "top") {
                    r.prepend(f)
                } else {
                    r.append(f)
                }
                f.wrapAll('<div class="slide3D_pagination_centered" />');
                var c = e(".slide3D_pagination_centered")
            }
            if (n.shadow) {
                e('<div class="slide3D_phone_shadow"></div>').appendTo(r);
                var h = r.find(".slide3D_phone_shadow")
            }
            if (n.highlight) {
                e('<div class="slide3D_phone_highlight"></div>').insertBefore(s);
                var p = r.find(".slide3D_phone_highlight")
            }
            var d = function () {
                this.imgs = i.children();
                this.imgCount = this.imgs.length - 1;
                this.bullets = f.children();
                this.flag = true;
                this.curIndex = 0;
                this.interval;
                this.highlight_interval;
                this.autoInterval;
                this.resizeFlag = false;
                this.bulletsFlag = true;
                this.mobileSwipeFlag = true;
                this.autoTimeout;
                this.initFinished = false;
                if (n.auto) this.autoDisabled = false;
                else this.autoDisabled = true;
                this.autoFunc = function (e, t) {
                    if (e == "enable") {
                        v.autoInterval = setInterval(function () {
                            if (v.curIndex != v.imgCount) {
                                v.curIndex++
                            } else {
                                v.curIndex = 0
                            }
                            v.detectAndFadeImage(v.curIndex);
                            v.autoDisabled = false
                        }, n.autoSpeed)
                    } else {
                        clearInterval(v.autoInterval);
                        v.autoDisabled = true;
                        v.autoTimeout = setTimeout(function () {
                            v.autoFunc("enable", "autoFunc")
                        }, n.autoDelay)
                    }
                };
                this.go = function (e) {
                    var t = parseInt(e.css("background-position"));
                    t -= parseInt(n.sliderWidth);
                    if (t <= parseInt(-n.totalWidth + n.sliderWidth)) {
                        e.css("background-position", t + "px 0px");
                        if (n.shadow) h.css("background-position", t + "px 0px");
                        e.toggleClass("slide3D_versus");
                        h.toggleClass("slide3D_versus");
                        clearInterval(v.interval);
                        v.startBack(e);
                        return
                    }
                    if (n.shadow) h.css("background-position", t + "px 0px");
                    e.css("background-position", t + "px 0px")
                };
                this.startBack = function (e) {
                    v.interval = setInterval(function () {
                        v.versus(e)
                    }, 45)
                };
                this.versus = function (t) {
                    var r = parseInt(t.css("background-position"));
                    r += n.sliderWidth;
                    if (r >= 0) {
                        t.css("background-position", r + "px 0px");
                        if (n.shadow) h.css("background-position", r + "px 0px");
                        clearInterval(v.interval);
                        t.toggleClass("slide3D_versus");
                        h.toggleClass("slide3D_versus");
                        if (n.loop) {
                            v.startAnimation(s)
                        } else {
                            try {
                                if (s.is(".slide3D_versus")) v.imgs.eq(v.curIndex).addClass("slide3D_versus");
                                else v.imgs.eq(v.curIndex).removeClass("slide3D_versus")
                            } catch (i) { }
                            v.imgs.eq(v.curIndex).fadeIn(n.fadeSpeed / 2, function () {
                                v.bulletsFlag = true
                            });
                            v.bullets.each(function (t) {
                                if (t == v.curIndex) e(this).addClass("slide3D_activeBullet");
                                else e(this).removeClass("slide3D_activeBullet")
                            })
                        }
                        return
                    }
                    if (n.shadow) h.css("background-position", r + "px 0px");
                    t.css("background-position", r + "px 0px")
                };
                this.animateHighlight = function (e, t) {
                    if (t == "right") {
                        var r = parseInt(e.css("background-position"));
                        r -= n.sliderWidth;
                        if (r <= -n.highlightTotalWidth + n.sliderWidth) {
                            e.css("background-position", "0px 0px");
                            if (!n.loop) {
                                clearInterval(v.highlight_interval)
                            }
                            return
                        }
                        e.css("background-position", r + "px 0px")
                    } else {
                        var r = parseInt(e.css("background-position"));
                        r += n.sliderWidth;
                        if (r >= 0) {
                            e.css("background-position", "0px 0px");
                            if (!n.loop) {
                                clearInterval(v.highlight_interval)
                            }
                            return
                        }
                        e.css("background-position", r + "px 0px")
                    }
                };
                this.startAnimation = function (e) {
                    v.interval = setInterval(function () {
                        v.go(e)
                    }, 45)
                };
                this.detectDirection = function (e) {
                    if (e == "left") {
                        s.addClass("slide3D_versus");
                        h.addClass("slide3D_versus")
                    } else {
                        s.removeClass("slide3D_versus");
                        h.removeClass("slide3D_versus")
                    }
                };
                this.detectAndFadeImage = function (t, r) {
                    v.imgs.filter(":visible").fadeOut(n.fadeSpeed / 2, function () {
                        if (typeof r == "undefined") {
                            if (e(this).index() >= t) {
                                var i = "left";
                                v.detectDirection("left")
                            } else {
                                var i = "right";
                                v.detectDirection("right")
                            }
                        } else {
                            if (r == "mobile_right") {
                                var i = "right";
                                v.detectDirection("right")
                            } else {
                                var i = "left";
                                v.detectDirection("left")
                            }
                        }
                        v.startAnimation(s);
                        if (typeof p != "undefined") {
                            if (i == "left") p.css("background-position", -n.highlightTotalWidth + n.sliderWidth + "px 0px");
                            v.highlight_interval = setInterval(function () {
                                v.animateHighlight(p, i)
                            }, 45)
                        }
                    })
                };
                this.resizeSlider = function (e) {
                    if (n.auto && v.autoDisabled == false && v.initFinished) v.autoFunc("disable", "resizeSlider");
                    n.imgWidth = e / 1.2714;
                    n.sliderWidth = parseInt(n.imgWidth * 1.2714);
                    n.imgHeight = parseInt(n.imgWidth * 1.5);
                    n.sliderHeight = parseInt(n.imgHeight * 1.6333333);
                    n.shadowHeight = parseInt(n.sliderWidth * .6348);
                    n.swiperWidth = n.sliderWidth;
                    n.swiperHeight = n.sliderHeight / 100 * 85;
                    i.css({
                        width: n.imgWidth + "px",
                        height: n.imgHeight + "px"
                    });
                    slideWrapper.css({
                        width: n.sliderWidth + "px",
                        height: n.sliderHeight + "px"
                    });
                    s.css({
                        width: n.sliderWidth + "px",
                        height: n.sliderHeight + "px"
                    });
                    if (n.highlight) p.css({
                        width: n.sliderWidth + "px",
                        height: n.sliderHeight + "px"
                    });
                    if (n.shadow) h.css({
                        width: n.sliderWidth + "px",
                        height: n.shadowHeight + "px"
                    });
                    if (n.mobile) o.css({
                        width: n.swiperWidth + "px",
                        height: n.swiperHeight + "px"
                    });
                    n.totalWidth = n.sliderWidth * 7;
                    n.highlightTotalWidth = n.sliderWidth * 13;
                    n.wrapperDwidth = e;
                    h.css("top", s.height() - h.height() / 1.3 + "px")
                };
                this.resizeBullets = function (t) {
                    var n = l.width();
                    var r = parseInt(l.css("margin-left"));
                    var i = n + r;
                    var s = i * l.size();
                    var o = parseInt(e(".slide3D_pagination_centered").css("width"));
                    if (s > o) { } else {
                        f.css("width", s + "px")
                    }
                };
                this.init = function () {
                    v.resizeSlider(r.width());
                    if (n.bullets) v.resizeBullets(r.width());
                    this.imgs.first().fadeIn(function () {
                        v.bullets.first().addClass("slide3D_activeBullet");
                        if (n.auto) v.autoFunc("enable", "init");
                        v.initFinished = true
                    })
                }
            };
            var v = new d;
            v.init();
            v.bullets.click(function () {
                clearTimeout(v.autoTimeout);
                v.curIndex = v.bullets.index(this);
                v.bullets.each(function (t) {
                    if (t == v.curIndex) e(this).addClass("slide3D_activeBullet");
                    else e(this).removeClass("slide3D_activeBullet")
                });
                if (v.imgs.filter(":visible").index() != v.curIndex && v.bulletsFlag) {
                    v.bulletsFlag = false;
                    if (n.auto && v.autoDisabled == false) v.autoFunc("disable", "bullets.click");
                    v.detectAndFadeImage(v.curIndex)
                }
            });
            e(window).resize(function () {
                if (n.wrapperDwidth != r.width()) {
                    v.resizeSlider(r.width())
                }
            });
            if (n.mobile) {
                o.swipe({
                    swipe: function (e, t, r, i, s) {
                        if (v.mobileSwipeFlag) {
                            a.fadeOut(300);
                            v.mobileSwipeFlag = false
                        }
                        if (n.auto && v.autoDisabled == false) v.autoFunc("disable", "mobile");
                        if (t == "right") {
                            if (v.curIndex != v.imgCount) {
                                v.curIndex = v.imgs.filter(":visible").next().index()
                            } else {
                                v.curIndex = 0
                            }
                            v.detectAndFadeImage(v.curIndex, "mobile_right")
                        } else if (t == "left") {
                            if (v.curIndex != 0) {
                                v.curIndex = v.imgs.filter(":visible").prev().index()
                            } else {
                                v.curIndex = v.imgCount
                            }
                            v.detectAndFadeImage(v.curIndex, "mobile_left")
                        }
                    },
                    threshold: 0
                })
            }
        })
    }

    //Device Slider
    $(function () {
        $("#wrapper").slide3D({
            'auto': true, // auto rotation
            'bullets': true, // show navigation bullets
            'position': 'bottom', // bullets position bottom or top
            "shadow": true, // highlight show/hide highlight
            'highlight': true, // show/hide highlight
            'autoSpeed': 15000, // time between rotation, not less than 1000
            'fadeSpeed': 500, // fade speed
        });
    });
})(jQuery)